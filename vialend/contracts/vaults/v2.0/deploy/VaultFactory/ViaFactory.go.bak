// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changeStat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vaultCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"setTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216179055612b3b90819061004090396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e9960c31161005b5780636e9960c3146100da5780638bce6edd146100eb5780638c64ea4a146100fc578063d0cf00541461012f57600080fd5b8063095cf5c61461008257806310bdba0f1461009757806362f9df78146100c7575b600080fd5b6100956100903660046103ac565b610162565b005b6100aa6100a53660046103ce565b61019b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100956100d5366004610423565b6101b5565b6000546001600160a01b03166100aa565b6001546001600160a01b03166100aa565b61010f61010a36600461045f565b6101f7565b604080516001600160a01b039384168152929091166020830152016100be565b61015261013d3660046103ac565b60026020526000908152604090205460ff1681565b60405190151581526020016100be565b6000546001600160a01b0316331461017957600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006101ab308787878787610230565b9695505050505050565b6000546001600160a01b031633146101cc57600080fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b6003818154811061020757600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0391821692501682565b6040805144602082015242918101919091526001600160a01b03861660608201526000906080016040516020818303038152906040528051906020012087878787878760405161027f90610383565b6001600160a01b0396871681529486166020860152928516604085015293166060830152608082019290925260a081019190915260c0018190604051809103906000f59050801580156102d6573d6000803e3d6000fd5b50604080518082019091526001600160a01b0397881681528782166020820190815260038054600181018255600091909152915160029092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b81018054938b166001600160a01b031994851617905590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c909101805491909916911617909655509395945050505050565b61268d8061047983390190565b80356001600160a01b03811681146103a757600080fd5b919050565b6000602082840312156103be57600080fd5b6103c782610390565b9392505050565b600080600080600060a086880312156103e657600080fd5b6103ef86610390565b94506103fd60208701610390565b935061040b60408701610390565b94979396509394606081013594506080013592915050565b6000806040838503121561043657600080fd5b61043f83610390565b91506020830135801515811461045457600080fd5b809150509250929050565b60006020828403121561047157600080fd5b503591905056fe610100604052600b805460ff60a01b191690553480156200001f57600080fd5b506040516200268d3803806200268d833981016040819052620000429162000230565b604080518082018252601a81527f5669614c656e6420556e6920436f6d706f756e6420546f6b656e0000000000006020808301918252835180850190945260048452630565543360e41b908401528151919291620000a3916003916200016d565b508051620000b99060049060208401906200016d565b5050506001600581905550856001600160a01b0316636e9960c36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012991906200029f565b6001600160a01b0390811660a0529485166080819052600b80546001600160a01b031916909117905592841660c052921660e052600991909155600a555062000301565b8280546200017b90620002c4565b90600052602060002090601f0160209004810192826200019f5760008555620001ea565b82601f10620001ba57805160ff1916838001178555620001ea565b82800160010185558215620001ea579182015b82811115620001ea578251825591602001919060010190620001cd565b50620001f8929150620001fc565b5090565b5b80821115620001f85760008155600101620001fd565b80516001600160a01b03811681146200022b57600080fd5b919050565b60008060008060008060c087890312156200024a57600080fd5b620002558762000213565b9550620002656020880162000213565b9450620002756040880162000213565b9350620002856060880162000213565b92506080870151915060a087015190509295509295509295565b600060208284031215620002b257600080fd5b620002bd8262000213565b9392505050565b600181811c90821680620002d957607f821691505b60208210811415620002fb57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516122d4620003b9600039600081816106c901528181610ae201528181610bca01528181610d3701528181611264015281816112ed01528181611587015261161e01526000818161029101528181610b8a01528181610cfa0152818161123001528181611295015281816113e70152818161154c01526115c601526000818161041201528181610cbb0152818161138d0152818161142901526116bb015260006102dd01526122d46000f3fe6080604052600436106101fb5760003560e01c806370a082311161010c578063c6ab5d901161009a578063d8d7f96f1161006c578063d8d7f96f146106eb578063dd62ed3e14610700578063e2bbb15814610746578063f0f5907d14610766578063f2a40db81461078657005b8063c6ab5d901461064d578063cd2b302614610682578063ceadeae0146106a2578063d21220a7146106b757005b8063a8c62e76116100de578063a8c62e7614610588578063a9059cbb146105a8578063aabfd572146105c8578063b1b4b1f6146105f5578063b49c308e1461062d57005b806370a082311461050857806395d89b411461053e57806398d5fdca14610553578063a457c2d71461056857005b806333e2f2ea116101895780633b05bc371161015b5780633b05bc37146104005780633c1bda09146104345780635bb6aa851461044a5780635ccaf589146104c75780636ea056a9146104e857005b806333e2f2ea14610370578063385602f8146103ab578063393ed075146103c057806339509351146103e057005b80630e68d540116101cd5780630e68d540146102cb57806318160ddd146102ff5780631ba326c41461031457806323b872dd14610334578063313ce5671461035457005b80630276650b1461020457806306fdde031461022d578063095ea7b31461024f5780630dfe16811461027f57005b3661020257005b005b34801561021057600080fd5b5061021a600a5481565b6040519081526020015b60405180910390f35b34801561023957600080fd5b506102426107a6565b6040516102249190611efa565b34801561025b57600080fd5b5061026f61026a366004611f49565b610838565b6040519015158152602001610224565b34801561028b57600080fd5b506102b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610224565b3480156102d757600080fd5b506102b37f000000000000000000000000000000000000000000000000000000000000000081565b34801561030b57600080fd5b5060025461021a565b34801561032057600080fd5b5061021a61032f366004611f73565b61084e565b34801561034057600080fd5b5061026f61034f366004611f9f565b61086e565b34801561036057600080fd5b5060405160128152602001610224565b34801561037c57600080fd5b5061039061038b366004611fdb565b61091d565b60408051938452602084019290925290820152606001610224565b3480156103b757600080fd5b5061021a610aca565b3480156103cc57600080fd5b506102026103db36600461200f565b610b5b565b3480156103ec57600080fd5b5061026f6103fb366004611f49565b610c74565b34801561040c57600080fd5b506102b37f000000000000000000000000000000000000000000000000000000000000000081565b34801561044057600080fd5b5061021a60095481565b34801561045657600080fd5b5061049a610465366004612042565b600860205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909186565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610224565b3480156104d357600080fd5b50600b5461026f90600160a01b900460ff1681565b3480156104f457600080fd5b50610202610503366004611f49565b610cb0565b34801561051457600080fd5b5061021a610523366004612042565b6001600160a01b031660009081526020819052604090205490565b34801561054a57600080fd5b50610242610db6565b34801561055f57600080fd5b5061021a610dc5565b34801561057457600080fd5b5061026f610583366004611f49565b610e0f565b34801561059457600080fd5b50600b546102b3906001600160a01b031681565b3480156105b457600080fd5b5061026f6105c3366004611f49565b610ea8565b3480156105d457600080fd5b5061021a6105e3366004612042565b60076020526000908152604090205481565b34801561060157600080fd5b5061021a61061036600461205d565b600c60209081526000928352604080842090915290825290205481565b34801561063957600080fd5b5061021a610648366004611fdb565b610eb5565b34801561065957600080fd5b5061066d610668366004612087565b610f51565b60408051928352602083019190915201610224565b34801561068e57600080fd5b5061020261069d3660046120aa565b611382565b3480156106ae57600080fd5b5061021a6113cf565b3480156106c357600080fd5b506102b37f000000000000000000000000000000000000000000000000000000000000000081565b3480156106f757600080fd5b5061020261141e565b34801561070c57600080fd5b5061021a61071b36600461205d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561075257600080fd5b50610202610761366004611fdb565b611468565b34801561077257600080fd5b506102026107813660046120aa565b6116b0565b34801561079257600080fd5b506102b36107a13660046120aa565b6116fd565b6060600380546107b5906120c3565b80601f01602080910402602001604051908101604052809291908181526020018280546107e1906120c3565b801561082e5780601f106108035761010080835404028352916020019161082e565b820191906000526020600020905b81548152906001019060200180831161081157829003601f168201915b5050505050905090565b6000610845338484611727565b50600192915050565b600061085a8483612114565b6108649084612136565b90505b9392505050565b600061087b84848461184b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6109128533858403611727565b506001949350505050565b600b5460408051634c6afee560e11b815290516000928592859285926001600160a01b0316916398d5fdca9160048083019260209291908290030181865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610991919061214e565b9050600081116109c85760405162461bcd60e51b8152602060048201526002602482015261070360f41b60448201526064016108fc565b60006109d360025490565b9050806109ec576109e582858561084e565b9450610ac1565b600b5460408051636253bb0f60e11b8152815160009384936001600160a01b039091169263c4a7761e9260048083019392829003018187875af1158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5b9190612167565b91509150610a676113cf565b610a719083612136565b9150610a7b610aca565b610a859082612136565b90506000610a9485848461084e565b90506000610aa3868c8c61084e565b905081610ab0868361218b565b610aba9190612114565b9850505050505b50509250925092565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381865afa158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b56919061214e565b905090565b6000610b656113cf565b90506000610b71610aca565b90508115610bb357600b54610bb3906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911684611a1b565b8015610bf357600b54610bf3906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611a1b565b600b8054600160a01b60ff60a01b1982161790915560405163393ed07560e01b8152600286810b600483015285900b60248201526001600160a01b039091169063393ed07590604401600060405180830381600087803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b5050505050505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610845918590610cab908690612136565b611727565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cf85760405162461bcd60e51b81526004016108fc906121aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614158015610d6c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614155b610d9e5760405162461bcd60e51b8152602060048201526003602482015262746f6b60e81b60448201526064016108fc565b610db26001600160a01b0383163383611a1b565b5050565b6060600480546107b5906120c3565b600b5460408051634c6afee560e11b815290516000926001600160a01b0316916398d5fdca9160048083019260209291908290030181865afa158015610b32573d6000803e3d6000fd5b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610e915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108fc565b610e9e3385858403611727565b5060019392505050565b600061084533848461184b565b600080600b60009054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2f919061214e565b9050600083610f3e838761218b565b610f489190612136565b95945050505050565b60008060648360ff161115610f8d5760405162461bcd60e51b8152602060048201526002602482015261706360f01b60448201526064016108fc565b33600090815260208190526040812054606490610fae9060ff87169061218b565b610fb89190612114565b90506000610fc560025490565b9050600082118015610fd75750808211155b61100c5760405162461bcd60e51b815260206004820152600660248201526573686172657360d01b60448201526064016108fc565b6110163383611a83565b600b5460408051636253bb0f60e11b8152815160009384936001600160a01b039091169263c4a7761e9260048083019392829003018187875af1158015611061573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110859190612167565b915091506000806110946113cf565b61109c610aca565b90925090506000806110ae8487612136565b6110b88487612136565b9092509050866110c8898461218b565b6110d29190612114565b9950866110df898361218b565b6110e99190612114565b985060008a8510806110fa57508984105b156111e557600b546040516371c851dd60e01b8152336004820152602481018d9052604481018c90526001600160a01b03909116906371c851dd906064016020604051808303816000875af1158015611157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117b91906121c9565b90506000806111886113cf565b611190610aca565b915091508c82101580156111a457508b8110155b6111de5760405162461bcd60e51b815260206004820152600b60248201526a6e65772062616c616e636560a81b60448201526064016108fc565b50506111e9565b5060015b806112235760405162461bcd60e51b815260206004820152600a6024820152691cdd1c985d08199d5b9960b21b60448201526064016108fc565b6112576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338d611a1b565b61128b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338c611a1b565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60209081526040808320338452909152812080548d92906112de9084906121eb565b90915550506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60209081526040808320338452909152812080548c92906113369084906121eb565b90915550506040518a81528b908a9033907f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca949060200160405180910390a4505050505050505050915091565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113ca5760405162461bcd60e51b81526004016108fc906121aa565b600a55565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401610b15565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114665760405162461bcd60e51b81526004016108fc906121aa565b565b60008211806114775750600081115b6114ac5760405162461bcd60e51b81526004016108fc906020808252600490820152630616d74360e41b604082015260600190565b336114df5760405162461bcd60e51b81526020600482015260036024820152620546f360ec1b60448201526064016108fc565b60008060006114ee858561091d565b9250925092506000831161152f5760405162461bcd60e51b8152602060048201526008602482015267073686172653c3d360c41b60448201526064016108fc565b6115393384611bd1565b8115611574576115746001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611cb0565b80156115af576115af6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611cb0565b600b805460ff60a01b191690556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c602090815260408083203384529091528120805484929061160f90849061222a565b90915550506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c602090815260408083203384529091528120805483929061166790849061222a565b90915550506040805183815260208101839052849133917f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e910160405180910390a35050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146116f85760405162461bcd60e51b81526004016108fc906121aa565b600955565b6006818154811061170d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166117895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108fc565b6001600160a01b0382166117ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166118af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108fc565b6001600160a01b0382166119115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108fc565b6001600160a01b038316600090815260208190526040902054818110156119895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906119c0908490612136565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a0c91815260200190565b60405180910390a35b50505050565b6040516001600160a01b038316602482015260448101829052611a7e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ce8565b505050565b6001600160a01b038216611ae35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108fc565b6001600160a01b03821660009081526020819052604090205481811015611b575760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108fc565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611b8690849061226b565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038216611c275760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108fc565b8060026000828254611c399190612136565b90915550506001600160a01b03821660009081526020819052604081208054839290611c66908490612136565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052611a159085906323b872dd60e01b90608401611a47565b6000611d3d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611dba9092919063ffffffff16565b805190915015611a7e5780806020019051810190611d5b91906121c9565b611a7e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108fc565b60606108648484600085856001600160a01b0385163b611e1c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108fc565b600080866001600160a01b03168587604051611e389190612282565b60006040518083038185875af1925050503d8060008114611e75576040519150601f19603f3d011682016040523d82523d6000602084013e611e7a565b606091505b5091509150611e8a828286611e95565b979650505050505050565b60608315611ea4575081610867565b825115611eb45782518084602001fd5b8160405162461bcd60e51b81526004016108fc9190611efa565b60005b83811015611ee9578181015183820152602001611ed1565b83811115611a155750506000910152565b6020815260008251806020840152611f19816040850160208701611ece565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611f4457600080fd5b919050565b60008060408385031215611f5c57600080fd5b611f6583611f2d565b946020939093013593505050565b600080600060608486031215611f8857600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611fb457600080fd5b611fbd84611f2d565b9250611fcb60208501611f2d565b9150604084013590509250925092565b60008060408385031215611fee57600080fd5b50508035926020909101359150565b8035600281900b8114611f4457600080fd5b6000806040838503121561202257600080fd5b61202b83611ffd565b915061203960208401611ffd565b90509250929050565b60006020828403121561205457600080fd5b61086782611f2d565b6000806040838503121561207057600080fd5b61207983611f2d565b915061203960208401611f2d565b60006020828403121561209957600080fd5b813560ff8116811461086757600080fd5b6000602082840312156120bc57600080fd5b5035919050565b600181811c908216806120d757607f821691505b602082108114156120f857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261213157634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612149576121496120fe565b500190565b60006020828403121561216057600080fd5b5051919050565b6000806040838503121561217a57600080fd5b505080516020909101519092909150565b60008160001904831182151516156121a5576121a56120fe565b500290565b60208082526005908201526430b236b4b760d91b604082015260600190565b6000602082840312156121db57600080fd5b8151801515811461086757600080fd5b60008083128015600160ff1b850184121615612209576122096120fe565b6001600160ff1b0384018313811615612224576122246120fe565b50500390565b600080821280156001600160ff1b038490038513161561224c5761224c6120fe565b600160ff1b8390038412811615612265576122656120fe565b50500190565b60008282101561227d5761227d6120fe565b500390565b60008251612294818460208701611ece565b919091019291505056fea2646970667358221220b5101fcbd619d68ed7be1c096610eafaf11a7abffc90d1c006acb87bde82768364736f6c634300080a0033a26469706673582212203ba3b89d98f629d6df0fd6ddc20a467881c89f53797f72ea13edaa6afc9a19a064736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// GetAdmin is a free data retrieval call binding the contract method 0x6e9960c3.
//
// Solidity: function getAdmin() view returns(address)
func (_Api *ApiCaller) GetAdmin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getAdmin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetAdmin is a free data retrieval call binding the contract method 0x6e9960c3.
//
// Solidity: function getAdmin() view returns(address)
func (_Api *ApiSession) GetAdmin() (common.Address, error) {
	return _Api.Contract.GetAdmin(&_Api.CallOpts)
}

// GetAdmin is a free data retrieval call binding the contract method 0x6e9960c3.
//
// Solidity: function getAdmin() view returns(address)
func (_Api *ApiCallerSession) GetAdmin() (common.Address, error) {
	return _Api.Contract.GetAdmin(&_Api.CallOpts)
}

// GetTeam is a free data retrieval call binding the contract method 0x8bce6edd.
//
// Solidity: function getTeam() view returns(address)
func (_Api *ApiCaller) GetTeam(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTeam")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTeam is a free data retrieval call binding the contract method 0x8bce6edd.
//
// Solidity: function getTeam() view returns(address)
func (_Api *ApiSession) GetTeam() (common.Address, error) {
	return _Api.Contract.GetTeam(&_Api.CallOpts)
}

// GetTeam is a free data retrieval call binding the contract method 0x8bce6edd.
//
// Solidity: function getTeam() view returns(address)
func (_Api *ApiCallerSession) GetTeam() (common.Address, error) {
	return _Api.Contract.GetTeam(&_Api.CallOpts)
}

// VaultStatus is a free data retrieval call binding the contract method 0xd0cf0054.
//
// Solidity: function vaultStatus(address ) view returns(bool)
func (_Api *ApiCaller) VaultStatus(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultStatus", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VaultStatus is a free data retrieval call binding the contract method 0xd0cf0054.
//
// Solidity: function vaultStatus(address ) view returns(bool)
func (_Api *ApiSession) VaultStatus(arg0 common.Address) (bool, error) {
	return _Api.Contract.VaultStatus(&_Api.CallOpts, arg0)
}

// VaultStatus is a free data retrieval call binding the contract method 0xd0cf0054.
//
// Solidity: function vaultStatus(address ) view returns(bool)
func (_Api *ApiCallerSession) VaultStatus(arg0 common.Address) (bool, error) {
	return _Api.Contract.VaultStatus(&_Api.CallOpts, arg0)
}

// Vaults is a free data retrieval call binding the contract method 0x8c64ea4a.
//
// Solidity: function vaults(uint256 ) view returns(address _strategy, address _vault)
func (_Api *ApiCaller) Vaults(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Strategy common.Address
	Vault    common.Address
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaults", arg0)

	outstruct := new(struct {
		Strategy common.Address
		Vault    common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Strategy = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Vault = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// Vaults is a free data retrieval call binding the contract method 0x8c64ea4a.
//
// Solidity: function vaults(uint256 ) view returns(address _strategy, address _vault)
func (_Api *ApiSession) Vaults(arg0 *big.Int) (struct {
	Strategy common.Address
	Vault    common.Address
}, error) {
	return _Api.Contract.Vaults(&_Api.CallOpts, arg0)
}

// Vaults is a free data retrieval call binding the contract method 0x8c64ea4a.
//
// Solidity: function vaults(uint256 ) view returns(address _strategy, address _vault)
func (_Api *ApiCallerSession) Vaults(arg0 *big.Int) (struct {
	Strategy common.Address
	Vault    common.Address
}, error) {
	return _Api.Contract.Vaults(&_Api.CallOpts, arg0)
}

// ChangeStat is a paid mutator transaction binding the contract method 0x62f9df78.
//
// Solidity: function changeStat(address _strategy, bool status) returns()
func (_Api *ApiTransactor) ChangeStat(opts *bind.TransactOpts, _strategy common.Address, status bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "changeStat", _strategy, status)
}

// ChangeStat is a paid mutator transaction binding the contract method 0x62f9df78.
//
// Solidity: function changeStat(address _strategy, bool status) returns()
func (_Api *ApiSession) ChangeStat(_strategy common.Address, status bool) (*types.Transaction, error) {
	return _Api.Contract.ChangeStat(&_Api.TransactOpts, _strategy, status)
}

// ChangeStat is a paid mutator transaction binding the contract method 0x62f9df78.
//
// Solidity: function changeStat(address _strategy, bool status) returns()
func (_Api *ApiTransactorSession) ChangeStat(_strategy common.Address, status bool) (*types.Transaction, error) {
	return _Api.Contract.ChangeStat(&_Api.TransactOpts, _strategy, status)
}

// CreateVault is a paid mutator transaction binding the contract method 0x10bdba0f.
//
// Solidity: function createVault(address _strategy, address _token0, address _token1, uint256 _vaultCap, uint256 _individualCap) returns(address)
func (_Api *ApiTransactor) CreateVault(opts *bind.TransactOpts, _strategy common.Address, _token0 common.Address, _token1 common.Address, _vaultCap *big.Int, _individualCap *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "createVault", _strategy, _token0, _token1, _vaultCap, _individualCap)
}

// CreateVault is a paid mutator transaction binding the contract method 0x10bdba0f.
//
// Solidity: function createVault(address _strategy, address _token0, address _token1, uint256 _vaultCap, uint256 _individualCap) returns(address)
func (_Api *ApiSession) CreateVault(_strategy common.Address, _token0 common.Address, _token1 common.Address, _vaultCap *big.Int, _individualCap *big.Int) (*types.Transaction, error) {
	return _Api.Contract.CreateVault(&_Api.TransactOpts, _strategy, _token0, _token1, _vaultCap, _individualCap)
}

// CreateVault is a paid mutator transaction binding the contract method 0x10bdba0f.
//
// Solidity: function createVault(address _strategy, address _token0, address _token1, uint256 _vaultCap, uint256 _individualCap) returns(address)
func (_Api *ApiTransactorSession) CreateVault(_strategy common.Address, _token0 common.Address, _token1 common.Address, _vaultCap *big.Int, _individualCap *big.Int) (*types.Transaction, error) {
	return _Api.Contract.CreateVault(&_Api.TransactOpts, _strategy, _token0, _token1, _vaultCap, _individualCap)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiTransactor) SetTeam(opts *bind.TransactOpts, _team common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTeam", _team)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiSession) SetTeam(_team common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetTeam(&_Api.TransactOpts, _team)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiTransactorSession) SetTeam(_team common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetTeam(&_Api.TransactOpts, _team)
}
